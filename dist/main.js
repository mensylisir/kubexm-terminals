(function(a,e){typeof exports=="object"&&typeof module<"u"?e(require("@kinvolk/headlamp-plugin/lib"),require("react/jsx-runtime"),require("@mui/material"),require("react")):typeof define=="function"&&define.amd?define(["@kinvolk/headlamp-plugin/lib","react/jsx-runtime","@mui/material","react"],e):(a=typeof globalThis<"u"?globalThis:a||self,e(a.pluginLib,a.pluginLib.ReactJSX,a.pluginLib.MuiMaterial,a.pluginLib.React))})(this,function(a,e,t,S){"use strict";const o=(n=>n&&typeof n=="object"&&"default"in n?n:{default:n})(S),w={apiVersion:"v1",kind:"Namespace",metadata:{name:"kubexm-terminals"}},N={apiVersion:"v1",kind:"ServiceAccount",metadata:{name:"ops-ui-admin-sa",namespace:"kubexm-terminals"}},I={apiVersion:"rbac.authorization.k8s.io/v1",kind:"ClusterRoleBinding",metadata:{name:"ops-ui-admin-binding"},subjects:[{kind:"ServiceAccount",name:"ops-ui-admin-sa",namespace:"kubexm-terminals"}],roleRef:{kind:"ClusterRole",name:"cluster-admin",apiGroup:"rbac.authorization.k8s.io"}};function A(n){return{apiVersion:"apps/v1",kind:"DaemonSet",metadata:{name:"node-shell-ds",namespace:"kubexm-terminals",labels:{app:"node-shell"}},spec:{selector:{matchLabels:{app:"node-shell"}},template:{metadata:{labels:{app:"node-shell"}},spec:{serviceAccountName:"ops-ui-admin-sa",tolerations:[{operator:"Exists"}],hostNetwork:!0,hostPID:!0,volumes:[{name:"host-root",hostPath:{path:"/"}}],containers:[{name:"node-shell-container",image:n,command:["/bin/sh","-c"],args:["exec /usr/bin/ttyd --writable -p 7681 /usr/bin/nsenter --target 1 --mount --uts --ipc --net --pid /bin/bash"],ports:[{name:"node-shell",containerPort:7681,hostPort:7681}],volumeMounts:[{name:"host-root",mountPath:"/host"}],securityContext:{privileged:!0}}]}}}}}function O(n){return{apiVersion:"apps/v1",kind:"Deployment",metadata:{name:"kubectl-shell-deployment",namespace:"kubexm-terminals",labels:{app:"kubectl-shell"}},spec:{replicas:1,selector:{matchLabels:{app:"kubectl-shell"}},template:{metadata:{labels:{app:"kubectl-shell"}},spec:{serviceAccountName:"ops-ui-admin-sa",hostname:"kubectl-shell",containers:[{name:"kubectl-shell-container",image:n,command:["/usr/bin/ttyd"],args:["--writable","-p","7682","/bin/bash"],ports:[{name:"kubectl-shell",containerPort:7682}]}]}}}}}const B={apiVersion:"v1",kind:"Service",metadata:{name:"kubectl-shell-svc",namespace:"kubexm-terminals"},spec:{type:"NodePort",selector:{app:"kubectl-shell"},ports:[{protocol:"TCP",port:80,targetPort:7682,nodePort:30082}]}},c="kubexm-terminals",L=7681,j=30082;function q(n){var p;const d=((p=n.status)==null?void 0:p.addresses)||[];let l=null,i=null;for(const r of d)r.type==="ExternalIP"&&(i=r.address),r.type==="InternalIP"&&(l=r.address);return i||l}function E(){const[n,d]=o.default.useState(null),[l,i]=o.default.useState(!0),[p,r]=o.default.useState(null),[h,$]=o.default.useState(null),[D,f]=o.default.useState(!0),[b,_]=o.default.useState("registry.dev.rdev.tech:18093/headlamp/super-netshoot:2.0"),m=o.default.useCallback(async()=>{i(!0),r(null);try{await a.ApiProxy.request(`/apis/apps/v1/namespaces/${c}/deployments/kubectl-shell-deployment`),d(!0)}catch(s){s.status===404||r(`检查资源失败: ${s.message}`),d(!1)}finally{i(!1)}},[]),y=o.default.useCallback(()=>{f(!0),a.ApiProxy.request("/api/v1/nodes").then(s=>$(s.items||[])).catch(s=>r(`加载节点列表失败: ${s.message}`)).finally(()=>f(!1))},[]);o.default.useEffect(()=>{m()},[m]),o.default.useEffect(()=>{n&&y()},[n,y]);const J=async()=>{i(!0),r(null);try{await a.ApiProxy.request("/api/v1/namespaces",{method:"POST",body:JSON.stringify(w),headers:{"Content-Type":"application/json"}}).catch(s=>{if(s.status!==409)throw s}),await a.ApiProxy.request(`/api/v1/namespaces/${c}/serviceaccounts`,{method:"POST",body:JSON.stringify(N),headers:{"Content-Type":"application/json"}}).catch(s=>{if(s.status!==409)throw s}),await a.ApiProxy.request("/apis/rbac.authorization.k8s.io/v1/clusterrolebindings",{method:"POST",body:JSON.stringify(I),headers:{"Content-Type":"application/json"}}).catch(s=>{if(s.status!==409)throw s}),await a.ApiProxy.request(`/apis/apps/v1/namespaces/${c}/daemonsets`,{method:"POST",body:JSON.stringify(A(b)),headers:{"Content-Type":"application/json"}}).catch(s=>{if(s.status!==409)throw s}),await a.ApiProxy.request(`/apis/apps/v1/namespaces/${c}/deployments`,{method:"POST",body:JSON.stringify(O(b)),headers:{"Content-Type":"application/json"}}).catch(s=>{if(s.status!==409)throw s}),await a.ApiProxy.request(`/api/v1/namespaces/${c}/services`,{method:"POST",body:JSON.stringify(B),headers:{"Content-Type":"application/json"}}).catch(s=>{if(s.status!==409)throw s}),await m()}catch(s){r(`安装失败: ${s.message}`)}finally{i(!1)}};if(l&&n===null)return e.jsxs(t.Paper,{sx:{p:2,m:2},children:[e.jsx(t.CircularProgress,{})," ",e.jsx(t.Typography,{sx:{ml:2,display:"inline-block",verticalAlign:"middle"},children:"正在检查终端环境..."})]});if(n===!1)return e.jsxs(t.Paper,{sx:{m:2,p:3},children:[e.jsx(t.Typography,{variant:"h4",gutterBottom:!0,children:"Kubexm控制台设置"}),e.jsx(t.Alert,{severity:"info",sx:{mb:2},children:"看起来是您第一次使用本插件，需要先在集群中安装所需的后端服务。"}),e.jsx(t.TextField,{label:"终端镜像地址",fullWidth:!0,variant:"outlined",size:"small",value:b,onChange:s=>_(s.target.value),sx:{mb:2}}),e.jsx(t.Button,{variant:"contained",onClick:J,disabled:l,startIcon:l&&e.jsx(t.CircularProgress,{size:20,color:"inherit"}),children:l?"正在安装...":"安装/修复后端服务"}),p&&e.jsx(t.Alert,{severity:"error",sx:{mt:2},children:p})]});const V=`http://${window.location.hostname}:${j}`,g=s=>window.open(s,"_blank","noopener,noreferrer");return e.jsxs(t.Paper,{sx:{m:2,p:3},children:[e.jsx(t.Typography,{variant:"h4",gutterBottom:!0,children:"Kubexm控制台"}),e.jsxs(t.Box,{sx:{mb:4,p:2,border:"1px solid",borderColor:"divider",borderRadius:1},children:[e.jsx(t.Typography,{variant:"h6",gutterBottom:!0,children:"集群管理控制台(kubectl)"}),e.jsx(t.Button,{variant:"contained",color:"primary",onClick:()=>g(V),children:"打开集群管理控制台"})]}),e.jsxs(t.Box,{children:[e.jsx(t.Typography,{variant:"h6",gutterBottom:!0,children:"节点控制台(root shell)"}),D?e.jsx(t.CircularProgress,{}):e.jsx(t.TableContainer,{component:t.Paper,variant:"outlined",children:e.jsxs(t.Table,{stickyHeader:!0,children:[e.jsx(t.TableHead,{children:e.jsxs(t.TableRow,{children:[e.jsx(t.TableCell,{sx:{fontWeight:"bold"},children:"节点名称"}),e.jsx(t.TableCell,{sx:{fontWeight:"bold"},children:"IP地址"}),e.jsx(t.TableCell,{sx:{fontWeight:"bold"},children:"操作系统"}),e.jsx(t.TableCell,{sx:{fontWeight:"bold"},children:"Kubelet版本"}),e.jsx(t.TableCell,{align:"right",sx:{fontWeight:"bold"},children:"Actions"})]})}),e.jsx(t.TableBody,{children:h==null?void 0:h.map(s=>{var k,x,v,T,P,C;const u=q(s),z=u?`http://${u}:${L}`:"";return e.jsxs(t.TableRow,{hover:!0,children:[e.jsx(t.TableCell,{children:(k=s.metadata)==null?void 0:k.name}),e.jsx(t.TableCell,{children:u||"Not Found"}),e.jsx(t.TableCell,{children:(v=(x=s.status)==null?void 0:x.nodeInfo)==null?void 0:v.osImage}),e.jsx(t.TableCell,{children:(P=(T=s.status)==null?void 0:T.nodeInfo)==null?void 0:P.kubeletVersion}),e.jsx(t.TableCell,{align:"right",children:e.jsx(t.Button,{variant:"outlined",size:"small",disabled:!u,onClick:()=>g(z),children:"Node Shell"})})]},(C=s.metadata)==null?void 0:C.uid)})})]})})]})]})}a.registerSidebarEntry({parent:null,name:"kubexm-terminals-sidebar",label:"Kubexm控制台",url:"/kubexm-terminals",icon:"mdi:console-network-outline"}),a.registerRoute({path:"/kubexm-terminals",sidebar:"kubexm-terminals-sidebar",name:"kubexm-terminals-route",exact:!0,component:E})});
